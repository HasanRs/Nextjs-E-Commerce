{"version":3,"file":"static/webpack/static/development/pages/payment.js.237ccf95fc914ed8d6d0.hot-update.js","sources":["webpack:///./pages/payment.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport CheckoutForm from \"../components/CheckoutForm\";\nimport Head from \"next/head\";\nimport Layout from '../components/Layout'\nimport Link from 'next/link'\n\nclass Checkout extends Component {\n  state = {\n    stripe: null,\n    productsInCart: this.props.productsInCart // from checkout page\n  }\n\n  componentDidMount() {\n    if (window.Stripe) {\n      this.setState({ stripe: window.Stripe(\"pk_test_6kBZOyTRFwWGyCm4gqzAXxbY00DdIRAzhY\") });\n      console.log(\"stripe is ready\");\n    } else {\n      document.querySelector(\"#stripe-js\").addEventListener(\"load\", () => {\n        // Create Stripe instance once Stripe.js loads\n        this.setState({ stripe: window.Stripe(\"pk_test_6kBZOyTRFwWGyCm4gqzAXxbY00DdIRAzhY\") });\n      });\n    }\n  }\n\n  render() {\n    // this.state.stripe will either be null or a Stripe instance\n    // depending on whether Stripe.js has loaded.\n    return (\n      <StripeProvider stripe={this.state.stripe}>\n        <Layout>\n        <div>\n          <Elements>\n            <CheckoutForm productsInCart={this.state.productsInCart} />\n            <Link href=\"#\"><a>test</a></Link>\n          </Elements>\n        </div>\n        </Layout>\n      </StripeProvider>\n    );\n  }\n}\n\nexport default Checkout;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAjCA;AACA;AAmCA;;;;A","sourceRoot":""}