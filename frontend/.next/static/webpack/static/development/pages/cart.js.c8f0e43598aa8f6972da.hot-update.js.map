{"version":3,"file":"static/webpack/static/development/pages/cart.js.c8f0e43598aa8f6972da.hot-update.js","sources":["webpack:///./pages/cart.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\n\nclass Cart extends Component {\n  state = {\n    totalPriceCart: 0,\n    vendorBjt: [ ],\n    vendorRinci: [ ]\n  };\n\n  // caluclate totalPriceCart function (array is a parameter for this.props.productsInCart)\n  calculateTotalPrice = array => {\n    let totalPricesArray = [];\n    array.forEach(product => {\n      let productPrice = parseInt(product.price) * product.quantity;\n      totalPricesArray.push(productPrice);\n    });\n    let totalPriceCart = totalPricesArray.reduce((a, b) => a + b, 0);\n    this.setState({\n      totalPriceCart: totalPriceCart\n    });\n  };\n\n  // on page load caluclate price \n  componentDidMount() {\n    this.calculateTotalPrice(this.props.productsInCart);\n    this.filterVendor(\"Rinci\")\n    this.filterVendor(\"Bjt\")\n  }\n\n  // if a product is removed update totalPriceCart  \n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      this.calculateTotalPrice(this.props.productsInCart);\n      this.filterVendor(\"Rinci\")\n      this.filterVendor(\"Bjt\")\n    } \n    \n  }\n\n  // filterVendorRinci() { \n  //   let vendorRinciProducts = this.props.productsInCart.filter(product => {\n  //     return product.vendor_name == \"Rinci\"\n  //   })\n  //   let vendorRinci = vendorRinciProducts\n    \n  //   this.setState({\n  //     vendorRinci: vendorRinci\n  //   })\n\n  // }\n\n\n  filterVendor(vendorName, vendorState) { \n    let vendorProducts = this.props.productsInCart.filter(product => {\n      return product.vendor_name == vendorName\n    }) \n    this.setState({\n      vendorState: vendorProducts\n    })\n  }\n\n\n\n  render() {\n    {console.log(this.state)}\n    return (\n      <Layout>\n        {this.props.productsInCart.length > 0 ? (\n          <div>\n            {this.props.productsInCart.map((product, index) => {\n              return (\n                <div index={product.id}>\n                  <p>\n                    <strong>Product:</strong>\n                    {product.name}\n                  </p>\n                  <p>\n                    <strong>Quantity:</strong>\n                    {product.quantity}\n                  </p>\n                  <p>\n                    <strong>Total: </strong>\n                    {product.quantity * parseInt(product.price)}€\n                  </p>\n\n                  <button onClick={() => this.props.deleteProduct(product.id)}>\n                    remove product\n                  </button>\n                </div>\n              );\n            })}\n            <h2>Total Price Cart: {this.state.totalPriceCart}€</h2>\n          </div>\n        ) : (\n          <p>no product in cart</p>\n        )}\n\n        \n      </Layout>\n    );\n  }\n}\n\nexport default Cart;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAlGA;AACA;AAoGA;;;;A","sourceRoot":""}