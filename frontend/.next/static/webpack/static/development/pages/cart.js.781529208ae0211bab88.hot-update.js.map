{"version":3,"file":"static/webpack/static/development/pages/cart.js.781529208ae0211bab88.hot-update.js","sources":["webpack:///./pages/cart.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\n\nclass Cart extends Component {\n  state = {\n    totalPriceCart: 0,\n    vendorBjt: [ ],\n    vendorRinci: [ ],\n  };\n\n  // on page load calculate totalPriceCart \n  componentDidMount() {\n    this.calculateTotalPrice(this.props.productsInCart);\n    this.filterVendorBjt(\"Bjt\")\n    this.filterVendorRinci(\"Rinci\")\n  }\n\n  // if a product is removed update totalPriceCart  \n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      this.calculateTotalPrice(this.props.productsInCart);\n      this.filterVendorBjt(\"Bjt\")\n      this.filterVendorRinci(\"Rinci\")\n    } \n  }\n\n  // collect Bjt product \n  filterVendorBjt(vendorName) { \n    let vendorProducts = this.props.productsInCart.filter(product => {\n      return product.vendor_name == vendorName\n    }) \n    this.setState({\n      vendorBjt: vendorProducts\n    })\n  }\n\n  // collect Rinci product \n  filterVendorRinci(vendorName) { \n    let vendorProducts = this.props.productsInCart.filter(product => {\n      return product.vendor_name == vendorName\n    }) \n    this.setState({\n      vendorRinci: vendorProducts\n    })\n  }\n\n\n   // caluclate totalPriceCart function (array is a parameter for this.props.productsInCart)\n   calculateTotalPrice = array => {\n    let totalPricesArray = [];\n    array.forEach(product => {\n      let productPrice = parseInt(product.price) * product.quantity;\n      totalPricesArray.push(productPrice);\n    });\n    let totalPriceCart = totalPricesArray.reduce((a, b) => a + b, 0);\n    this.setState({\n      totalPriceCart: totalPriceCart\n    });\n  };\n\n\nrender() {\n  {console.log(this.state.vendorBjt)}\n  return (\n    <Layout>\n    <h2>Bjt products</h2>\n      {this.state.vendorBjt.length > 0 ? (\n         \n      this.state.vendorBjt.map(product => {\n        return <div>\n\n          <p><strong>Name: </strong> {product.name}</p>\n          <p><strong>Quantity: </strong> {product.quantity}</p>\n          <p><strong>Total: </strong> {product.quantity * parseInt(product.price)}â‚¬</p>\n          <button onClick={() => this.props.deleteProduct(product.id)}>\n                     remove product\n          </button>\n        </div>\n      })\n          \n      ) : (\n       null\n      )}\n\n      \n    </Layout>\n  );\n}\n}\n\nexport default Cart;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;;;;AAjDA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAgBA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AASA;;;;AApFA;AACA;AAsFA;;;;A","sourceRoot":""}