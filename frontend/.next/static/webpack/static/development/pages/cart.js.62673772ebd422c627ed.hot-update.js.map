{"version":3,"file":"static/webpack/static/development/pages/cart.js.62673772ebd422c627ed.hot-update.js","sources":["webpack:///./pages/cart.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Link from 'next/link'\n\nclass Cart extends Component {\n  state = {\n    totalPriceCart: 0,\n    vendorBjt: [ ],\n    vendorRinci: [ ],\n    minPriceShipping: 50\n  };\n\n  // on page load calculate totalPriceCart \n  componentDidMount() {\n    this.calculateTotalPrice(this.props.productsInCart);\n    this.filterVendorBjt()\n    this.filterVendorRinci()\n  }\n\n  // if a product is removed update totalPriceCart  \n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      this.calculateTotalPrice(this.props.productsInCart);\n      this.filterVendorBjt()\n      this.filterVendorRinci()\n    } \n    console.log(this.state)\n  }\n\n  // collect Bjt products \n  filterVendorBjt() { \n    let vendorProducts = this.props.productsInCart.filter(product => {\n      return product.vendor_name == \"Bjt\"\n    }) \n    this.setState({\n      vendorBjt: vendorProducts\n    })\n  }\n\n  // collect Rinci products\n  filterVendorRinci() { \n    let vendorProducts = this.props.productsInCart.filter(product => {\n      return product.vendor_name == \"Rinci\"\n    }) \n    this.setState({\n      vendorRinci: vendorProducts\n    })\n  }\n\n\n   // caluclate totalPriceCart function (array is a parameter for this.props.productsInCart)\n   calculateTotalPrice = array => {\n    let totalPricesArray = [];\n    array.forEach(product => {\n      let productPrice = parseInt(product.price) * product.quantity;\n      totalPricesArray.push(productPrice);\n    });\n    let totalPriceCart = totalPricesArray.reduce((a, b) => a + b, 0);\n    this.setState({\n      totalPriceCart: totalPriceCart\n    });\n  };\n\n\nrender() {\n  return (\n    <Layout>\n      {/* Bjt vendor */}\n    <h2>Bjt products</h2>\n      {this.state.vendorBjt.length > 0 ? (\n         \n      this.state.vendorBjt.map(product => {\n        return <div>\n\n          <p><strong>Name: </strong> {product.name}</p>\n          <p><strong>Quantity: </strong> {product.quantity}</p>\n          <p><strong>Total: </strong> {product.quantity * parseInt(product.price)}€</p>\n          <button onClick={() => this.props.deleteProduct(product.id)}>\n                     remove product\n          </button>\n        </div>\n      })\n          \n      ) : (\n       null\n      )}\n      <h2>Total price cart: {this.state.totalPriceCart}€</h2>\n\n    {/* <a href=\"/checkout\">checkout</a>  */}\n\n      <Link href=\"/payment\"><a>payment </a></Link>\n    </Layout>\n  );\n}\n}\n\nexport default Cart;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;;;;AAlDA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAgBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAzFA;AACA;AA2FA;;;;A","sourceRoot":""}