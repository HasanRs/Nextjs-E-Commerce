{"version":3,"file":"static/webpack/static/development/pages/cart.js.09eb33f02fa5aba66690.hot-update.js","sources":["webpack:///./pages/cart.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\n\nclass Cart extends Component {\n  state = {\n    totalPriceCart: 0\n  };\n\n  componentDidMount() {\n    let totalPricesArray = [];\n    this.props.productsInCart.forEach(product => {\n      let productPrice = parseInt(product.price) * product.quantity;\n\n      totalPricesArray.push(productPrice);\n    });\n    let totalPriceCart = totalPricesArray.reduce((a, b) => a + b, 0);\n    \n\n    this.setState({\n      totalPriceCart: totalPriceCart\n    });\n    console.log(\"component did mount\")\n  }\n\n\n// componentDidUpdate(prevProps) {\n//     if (this.props !== prevProps) {\n        \n//         let totalPriceCart = this.state.totalPriceCart\n//         console.log(totalPriceCart)\n//                 this.setState({\n//                     totalPriceCart: totalPriceCart\n//                   });\n//         console.log(\"component did update\")\n//     }\n    \n//   }\n\n\ncomponentDidUpdate() {\n    let totalPricesArray = [];\n    this.props.productsInCart.forEach(product => {\n      let productPrice = parseInt(product.price) * product.quantity;\n\n      totalPricesArray.push(productPrice);\n    });\n    let totalPriceCart = totalPricesArray.reduce((a, b) => a + b, 0);\n    \n\n    this.setState({\n      totalPriceCart: totalPriceCart\n    });\n}\n\n\n  render() {\n    return (\n      <Layout>\n        {this.props.productsInCart.length > 0 ? (\n            <div>\n                \n         {this.props.productsInCart.map((product, index) => {\n           return <div index={product.id}>\n                <p>\n                  <strong>Product:</strong>\n                  {product.name}\n                </p>\n                <p>\n                  <strong>Quantity:</strong>\n                  {product.quantity}\n                </p>\n                <p>\n                  <strong>Total: </strong>\n                  {product.quantity * parseInt(product.price)}€\n                </p>\n\n                <button onClick={() => this.props.deleteProduct(product.id)}>\n                  remove product\n                </button>\n               \n              </div>\n         })}\n         <h2>Total Price Cart: {this.state.totalPriceCart}€</h2>\n            </div>\n        \n        ) : (\n          <p>no product in cart</p>\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default Cart;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AADA;AAGA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AADA;AAGA;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAvFA;AACA;AAyFA;;;;A","sourceRoot":""}